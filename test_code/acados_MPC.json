{
    "acados_include_path": "/home/pawan/Thesis/acados/include",
    "acados_lib_path": "/home/pawan/Thesis/acados/lib",
    "code_export_directory": "/home/pawan/Thesis/F1env/src/f1tenth_simulator/scripts/test_code/export_dir",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_0": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [],
        "idxsh_0": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_0": [],
        "idxsphi_e": [],
        "lbu": [],
        "lbx": [],
        "lbx_0": [
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [],
        "lh_0": [],
        "lh_e": [],
        "lphi": [],
        "lphi_0": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [],
        "lsh_0": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_0": [],
        "lsphi_e": [],
        "ubu": [],
        "ubx": [],
        "ubx_0": [
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [],
        "uh_0": [],
        "uh_e": [],
        "uphi": [],
        "uphi_0": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [],
        "ush_0": [],
        "ush_e": [],
        "usphi": [],
        "usphi_0": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [
            [
                0.0,
                0.0
            ],
            [
                0.0,
                0.0
            ],
            [
                0.0,
                0.0
            ],
            [
                1.0,
                0.0
            ],
            [
                0.0,
                1.0
            ]
        ],
        "Vu_0": [
            [
                0.0,
                0.0
            ],
            [
                0.0,
                0.0
            ],
            [
                0.0,
                0.0
            ],
            [
                1.0,
                0.0
            ],
            [
                0.0,
                1.0
            ]
        ],
        "Vx": [
            [
                1.0,
                0.0,
                0.0
            ],
            [
                0.0,
                1.0,
                0.0
            ],
            [
                0.0,
                0.0,
                1.0
            ],
            [
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0
            ]
        ],
        "Vx_0": [
            [
                1.0,
                0.0,
                0.0
            ],
            [
                0.0,
                1.0,
                0.0
            ],
            [
                0.0,
                0.0,
                1.0
            ],
            [
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0
            ]
        ],
        "Vx_e": [
            [
                1.0,
                0.0,
                0.0
            ],
            [
                0.0,
                1.0,
                0.0
            ],
            [
                0.0,
                0.0,
                1.0
            ]
        ],
        "Vz": [],
        "Vz_0": [],
        "W": [
            [
                1,
                0,
                0,
                0,
                0
            ],
            [
                0,
                1,
                0,
                0,
                0
            ],
            [
                0,
                0,
                1,
                0,
                0
            ],
            [
                0,
                0,
                0,
                1,
                0
            ],
            [
                0,
                0,
                0,
                0,
                1
            ]
        ],
        "W_0": [
            [
                1,
                0,
                0,
                0,
                0
            ],
            [
                0,
                1,
                0,
                0,
                0
            ],
            [
                0,
                0,
                1,
                0,
                0
            ],
            [
                0,
                0,
                0,
                1,
                0
            ],
            [
                0,
                0,
                0,
                0,
                1
            ]
        ],
        "W_e": [
            [
                1,
                0,
                0
            ],
            [
                0,
                1,
                0
            ],
            [
                0,
                0,
                1
            ]
        ],
        "Zl": [],
        "Zl_0": [],
        "Zl_e": [],
        "Zu": [],
        "Zu_0": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "LINEAR_LS",
        "cost_type_0": "LINEAR_LS",
        "cost_type_e": "LINEAR_LS",
        "yref": [
            10.0,
            10.0,
            1.5707963267948966,
            0.0,
            0.0
        ],
        "yref_0": [
            10.0,
            10.0,
            1.5707963267948966,
            0.0,
            0.0
        ],
        "yref_e": [
            10.0,
            10.0,
            1.5707963267948966
        ],
        "zl": [],
        "zl_0": [],
        "zl_e": [],
        "zu": [],
        "zu_0": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/pawan/.local/lib/python3.8/site-packages/numpy/core/include",
        "/usr/include/python3.8"
    ],
    "dims": {
        "N": 250,
        "nbu": 0,
        "nbx": 0,
        "nbx_0": 3,
        "nbx_e": 0,
        "nbxe_0": 3,
        "ng": 0,
        "ng_e": 0,
        "nh": 0,
        "nh_0": 0,
        "nh_e": 0,
        "np": 0,
        "nphi": 0,
        "nphi_0": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_0": 0,
        "nr_e": 0,
        "ns": 0,
        "ns_0": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 0,
        "nsh_0": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_0": 0,
        "nsphi_e": 0,
        "nu": 2,
        "nx": 3,
        "ny": 5,
        "ny_0": 5,
        "ny_e": 3,
        "nz": 0
    },
    "json_file": "acados_MPC.json",
    "model": {
        "con_h_expr": null,
        "con_h_expr_0": null,
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_0": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_0": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_0": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": null,
        "cost_expr_ext_cost_0": null,
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": null,
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaeghaaaaaaaaaaaaaaadaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaacaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaegdaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaabaaaaaaaghegoaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaadaaaaaaaahdhjgegdaaaaaaaaaaaaaaachbaaaaaaaaaaaaaaaegnaaaaaaaaaaaaaaachcaaaaaaaaaaaaaaaegeaaaaaaaaaaaaaaaegdaaaaaaaaaaaaaaachbaaaaaaaaaaaaaaaegpaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaafaaaaaaaegfgmgehbgegmcaaaaaaaaaaaaaachhkioieocppbcfnpd",
        "f_impl_expr": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaeghaaaaaaaaaaaaaaadaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaacaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaegcaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaagaaaaaaadhihpfegpgehegdaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaabaaaaaaaghegoaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaadaaaaaaaahdhjgegcaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaagaaaaaaadhjhpfegpgehegdaaaaaaaaaaaaaaachcaaaaaaaaaaaaaaaegnaaaaaaaaaaaaaaachdaaaaaaaaaaaaaaaegcaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaahaaaaaaaahdhjgpfegpgehegeaaaaaaaaaaaaaaaegdaaaaaaaaaaaaaaachcaaaaaaaaaaaaaaaegpaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaafaaaaaaaegfgmgehbgegmcaaaaaaaaaaaaaachhkioieocppbcfnpd",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "Kinematic_Bicycle_Model",
        "nu_original": null,
        "p": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaegdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "t": [],
        "u": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaeggaaaaaaaaaaaaaaacaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaafaaaaaaaegfgmgehbgegpcaaaaaaaaaaaaaabaaaaaaagh",
        "x": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaeghaaaaaaaaaaaaaaadaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaacaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaacaaaaaaadhihegpcaaaaaaaaaaaaaacaaaaaaadhjhegpcaaaaaaaaaaaaaadaaaaaaaahdhjg",
        "xdot": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaeghaaaaaaaaaaaaaaadaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaacaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaegpcaaaaaaaaaaaaaagaaaaaaadhihpfegpgehegpcaaaaaaaaaaaaaagaaaaaaadhjhpfegpgehegpcaaaaaaaaaaaaaahaaaaaaaahdhjgpfegpgeh",
        "z": "jhpnnagiieahaaaadaaaaaaaaaaaaaaaaaegdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "name": "Kinematic_Bicycle_Model",
    "parameter_values": [],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.02,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "cost_discretization": "EULER",
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "IRK",
        "levenberg_marquardt": 10.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 0.01,
        "nlp_solver_tol_eq": 0.01,
        "nlp_solver_tol_ineq": 0.01,
        "nlp_solver_tol_stat": 0.01,
        "nlp_solver_type": "SQP_RTI",
        "print_level": 0,
        "qp_solver": "PARTIAL_CONDENSING_HPIPM",
        "qp_solver_cond_N": 250,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "reg_epsilon": 0.0001,
        "regularize_method": "NO_REGULARIZE",
        "shooting_nodes": [
            0.0,
            0.02,
            0.04,
            0.06,
            0.08,
            0.1,
            0.12000000000000001,
            0.14,
            0.16,
            0.18,
            0.19999999999999998,
            0.21999999999999997,
            0.23999999999999996,
            0.25999999999999995,
            0.27999999999999997,
            0.3,
            0.32,
            0.34,
            0.36000000000000004,
            0.38000000000000006,
            0.4000000000000001,
            0.4200000000000001,
            0.4400000000000001,
            0.46000000000000013,
            0.48000000000000015,
            0.5000000000000001,
            0.5200000000000001,
            0.5400000000000001,
            0.5600000000000002,
            0.5800000000000002,
            0.6000000000000002,
            0.6200000000000002,
            0.6400000000000002,
            0.6600000000000003,
            0.6800000000000003,
            0.7000000000000003,
            0.7200000000000003,
            0.7400000000000003,
            0.7600000000000003,
            0.7800000000000004,
            0.8000000000000004,
            0.8200000000000004,
            0.8400000000000004,
            0.8600000000000004,
            0.8800000000000004,
            0.9000000000000005,
            0.9200000000000005,
            0.9400000000000005,
            0.9600000000000005,
            0.9800000000000005,
            1.0000000000000004,
            1.0200000000000005,
            1.0400000000000005,
            1.0600000000000005,
            1.0800000000000005,
            1.1000000000000005,
            1.1200000000000006,
            1.1400000000000006,
            1.1600000000000006,
            1.1800000000000006,
            1.2000000000000006,
            1.2200000000000006,
            1.2400000000000007,
            1.2600000000000007,
            1.2800000000000007,
            1.3000000000000007,
            1.3200000000000007,
            1.3400000000000007,
            1.3600000000000008,
            1.3800000000000008,
            1.4000000000000008,
            1.4200000000000008,
            1.4400000000000008,
            1.4600000000000009,
            1.4800000000000009,
            1.5000000000000009,
            1.520000000000001,
            1.540000000000001,
            1.560000000000001,
            1.580000000000001,
            1.600000000000001,
            1.620000000000001,
            1.640000000000001,
            1.660000000000001,
            1.680000000000001,
            1.700000000000001,
            1.720000000000001,
            1.740000000000001,
            1.7600000000000011,
            1.7800000000000011,
            1.8000000000000012,
            1.8200000000000012,
            1.8400000000000012,
            1.8600000000000012,
            1.8800000000000012,
            1.9000000000000012,
            1.9200000000000013,
            1.9400000000000013,
            1.9600000000000013,
            1.9800000000000013,
            2.0000000000000013,
            2.0200000000000014,
            2.0400000000000014,
            2.0600000000000014,
            2.0800000000000014,
            2.1000000000000014,
            2.1200000000000014,
            2.1400000000000015,
            2.1600000000000015,
            2.1800000000000015,
            2.2000000000000015,
            2.2200000000000015,
            2.2400000000000015,
            2.2600000000000016,
            2.2800000000000016,
            2.3000000000000016,
            2.3200000000000016,
            2.3400000000000016,
            2.3600000000000017,
            2.3800000000000017,
            2.4000000000000017,
            2.4200000000000017,
            2.4400000000000017,
            2.4600000000000017,
            2.4800000000000018,
            2.5000000000000018,
            2.520000000000002,
            2.540000000000002,
            2.560000000000002,
            2.580000000000002,
            2.600000000000002,
            2.620000000000002,
            2.640000000000002,
            2.660000000000002,
            2.680000000000002,
            2.700000000000002,
            2.720000000000002,
            2.740000000000002,
            2.760000000000002,
            2.780000000000002,
            2.800000000000002,
            2.820000000000002,
            2.840000000000002,
            2.860000000000002,
            2.880000000000002,
            2.900000000000002,
            2.920000000000002,
            2.940000000000002,
            2.960000000000002,
            2.980000000000002,
            3.000000000000002,
            3.0200000000000022,
            3.0400000000000023,
            3.0600000000000023,
            3.0800000000000023,
            3.1000000000000023,
            3.1200000000000023,
            3.1400000000000023,
            3.1600000000000024,
            3.1800000000000024,
            3.2000000000000024,
            3.2200000000000024,
            3.2400000000000024,
            3.2600000000000025,
            3.2800000000000025,
            3.3000000000000025,
            3.3200000000000025,
            3.3400000000000025,
            3.3600000000000025,
            3.3800000000000026,
            3.4000000000000026,
            3.4200000000000026,
            3.4400000000000026,
            3.4600000000000026,
            3.4800000000000026,
            3.5000000000000027,
            3.5200000000000027,
            3.5400000000000027,
            3.5600000000000027,
            3.5800000000000027,
            3.6000000000000028,
            3.6200000000000028,
            3.640000000000003,
            3.660000000000003,
            3.680000000000003,
            3.700000000000003,
            3.720000000000003,
            3.740000000000003,
            3.760000000000003,
            3.780000000000003,
            3.800000000000003,
            3.820000000000003,
            3.840000000000003,
            3.860000000000003,
            3.880000000000003,
            3.900000000000003,
            3.920000000000003,
            3.940000000000003,
            3.960000000000003,
            3.980000000000003,
            4.000000000000003,
            4.020000000000002,
            4.040000000000002,
            4.060000000000001,
            4.080000000000001,
            4.1000000000000005,
            4.12,
            4.14,
            4.159999999999999,
            4.179999999999999,
            4.199999999999998,
            4.219999999999998,
            4.2399999999999975,
            4.259999999999997,
            4.279999999999997,
            4.299999999999996,
            4.319999999999996,
            4.339999999999995,
            4.359999999999995,
            4.379999999999995,
            4.399999999999994,
            4.419999999999994,
            4.439999999999993,
            4.459999999999993,
            4.479999999999992,
            4.499999999999992,
            4.519999999999992,
            4.539999999999991,
            4.559999999999991,
            4.57999999999999,
            4.59999999999999,
            4.6199999999999894,
            4.639999999999989,
            4.659999999999989,
            4.679999999999988,
            4.699999999999988,
            4.719999999999987,
            4.739999999999987,
            4.7599999999999865,
            4.779999999999986,
            4.799999999999986,
            4.819999999999985,
            4.839999999999985,
            4.859999999999984,
            4.879999999999984,
            4.8999999999999835,
            4.919999999999983,
            4.939999999999983,
            4.959999999999982,
            4.979999999999982,
            4.999999999999981
        ],
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 5,
        "time_steps": [
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02,
            0.02
        ]
    },
    "zoro_description": null
}